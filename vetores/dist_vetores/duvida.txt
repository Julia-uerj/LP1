* Crie uma struct para guardar um ponto no espaço bi-dimensional com dois inteiros x e y.

* Crie uma função para preencher 1 ponto.

a funcao deve declarar uma struct Ponto e retornar a struct como retorno da funcao (?)


* Na main , crie um vetor com dez pontos.
por que preciso criar o vetor dentro da main? 


* Crie uma função para preencher um dado vetor de pontos.



* Crie uma função que receba um vetor de pontos e retorne o ponto mais distante de (0,0).




////////////////////////// O QUE FIZ


* Crie uma struct para guardar um ponto no espaço bi-dimensional com dois inteiros x e y.
criei struct Ponto

* Crie uma função para preencher 1 ponto.
1) declarei a struct na main e preenchi (inicializei) a struct na funcao - o proposito eh utilizar a passagem de ponteiros como parametros para funcao que preenche

2) no caso, utiliza-se o ponteiro para a struct Ponto ploc1 (local) para acessar (dereferenciar) o ponteiro p1 (da main) 

* Na main, crie um vetor com dez pontos.
criei ps[TAM]

* Crie uma função para preencher um dado vetor de pontos.
3) depois, passei a utilizar o ponteiro para a struct Ponto ploc1 (local da preenche_ponto) para acessar a struct ploc2 (local da preenche_vetor)

* Crie uma função que receba um vetor de pontos e retorne o ponto mais distante de (0,0).
para a funcao calcular as distancias, preciso acessar todos os elementos do vetor ps (da main), 
TIVE PROBLEMAS AO UTILIZAR ARITMETICA DE PONTEIROS PARA ACESSAR OS ELEMENTOS DO VETOR
guardar o maior elemento calculado numa variavel auxiliar e ir atualizando a cada iteração
AINDA NAO ESTA FUNCIONAL
